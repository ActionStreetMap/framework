canvas	 												{ z-index: 0; material: Terrain; background-color: #f1eee8;}

/* buildings */
/* Take note that building-style is set to residential. We have to distinguish different types */
area[man_made=tower],
area[building:levels],
area[building:shape],
area[building:part],
area[addr:housename],
area[addr:housenumber],
area[building]											{ z-index: 0; builder: building; behaviour: solid; material: Concrete_Patterned; height:12; min_height: 0;  fill-color: #FF0000; building-style:residential; }

area[height]											{ height: eval(num(tag('height')));}
area[building:levels]									{ height: eval(num(tag('building:levels')) * num(3));}
area[min_height]										{ min_height: eval(num(tag('min_height')));}
area[building:shape=sphere]								{ builder: sphere;}
area[building:shape=cylinder]							{ builder: cylinder;}

area[building=residential], 	
area[building=yes]										{ builder: building; fill-color: #bca9a9; building-style:residential;}

area[building=tourism]									{ fill-color: #0066ff;}
area[building=commercial] 								{ fill-color: #efc8c8;}
area[building=garage] 									{ fill-color: #bca9a9;}
area[building=apartments]								{ fill-color: #bca9a9;}

area[building:colour]									{ fill-color:eval(color(tag('building:colour')));}
area[building:color]									{ fill-color:eval(color(tag('building:color')));}

/* flat areas */
area[amenity],
area[tourism=attraction],
area[natural],
area[landuse]											{ z-index: 0.1; builder: flat; fill-color: #FF0000; material: Concrete_Patterned;}

area[landuse=residential]								{ fill-color: #dddddd;}

area[landuse=cemetery],
area[landuse=grave_yard],
area[amenity=grave_yard] 								{ fill-color: #aacbaf;}

area[landuse=farm],
area[landuse=farmland] 									{ fill-color: #ead8bd;}

area[landuse=commercial]								{ fill-color: #7A96A3;}

area[landuse=retail] 									{ fill-color: #f1dada;	}

area[landuse=brownfield],
area[landuse=landfill],
area[landuse=greenfield],
area[landuse=construction] 								{ fill-color: #9d9d6c; fill-opacity: 0.7;}

area[amenity=parking][parking=surface]					{ fill-color: #f7efb7;}

area[amenity],
area[natural=beach]										{ fill-color: #22FF11; }

area[tourism=attraction]								{ fill-color: #f2caea; material: Concrete_Patterned;}


/* green zones */
area[landuse=forest], 												
area[leisure],
area[landuse=village_green],
area[amenity=kindergarten],											
area[landuse=grass],
area[landuse=meadow],													
area[landuse=industrial],		
area[landuse=railway]									{ z-index: 0.1; builder: flat; material: Grass;}

area[landuse=forest] 									{ fill-color: #8dc56c; }

area[leisure],
area[landuse=village_green],
area[amenity=kindergarten]								{ fill-color: #22FF11;}

area[landuse=grass],
area[landuse=meadow]									{ fill-color: #cfeca8;}

area[leisure=recreation_ground]							{ fill-color: #b6fdb6; }

area[landuse=industrial],		
area[landuse=railway]									{ fill-color: #dfd1d6;}

/* water */
/* TODO: process open waterfall*/
area[waterway]:closed,
area[natural=water],
area[landuse=basin]										{ z-index: 0.1;builder: flat; material: Grass; fill-color: #5429FF;}

way[barrier] :closed									{ z-index: 0.1;builder: flat; material: Grass; fill-color: #444444;  width: 0.4;}

/* roads */
way[highway]											{ z-index: 0.1; builder: flat; material: Grass; fill-color: #FF0000; width:2 }

way[highway=tertiary],
way[highway=residential],
way[highway=unclassified],
way[highway=road]										{ fill-color: #bbbbbb; width:16; }
way[highway=living_street]								{ fill-color: #000000; width:14.5; }
way[highway=motorway]									{ fill-color: #506077; width:13; }
way[highway=trunk]										{ fill-color: #477147; width:16; }
way[highway=primary]									{ fill-color: #8d4346; width:16; }
way[highway=secondary]									{ fill-color: #a37b48; width:16; }

way[highway=footway],
way[highway=path][foot=designated]						{ fill-color: #FA8072; width:3.5; }

way[highway=service]									{ fill-color: #FFFFFF; width:3; }

/* Shouldn't be shown */
area[waterway=riverbank],
area[have_riverbank=yes],
area[level<0],
area[layer<0]											{ builder:empty }